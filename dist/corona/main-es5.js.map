{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.menu.ts","webpack:///src/app/app.module.ts","webpack:///src/app/authenticated-user/authenticated-user.component.ts","webpack:///src/app/authenticated-user/authenticated-user.component.html","webpack:///src/app/latestnews/latestnews.component.ts","webpack:///src/app/latestnews/latestnews.component.html","webpack:///src/app/precautions/precautions.component.ts","webpack:///src/app/precautions/precautions.component.html","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/dashboard-data.service.ts","webpack:///src/app/services/newsservice.ts","webpack:///src/app/services/users.service.ts","webpack:///src/app/tracker/tracker.component.ts","webpack:///src/app/tracker/tracker.component.html","webpack:///src/dashboard/content/content.component.ts","webpack:///src/dashboard/content/content.component.html","webpack:///src/dashboard/dashboard.module.ts","webpack:///src/dashboard/dashboard/dashboard.component.ts","webpack:///src/dashboard/dashboard/dashboard.component.html","webpack:///src/dashboard/menus/menu-item/menu-item.component.ts","webpack:///src/dashboard/menus/menu-item/menu-item.component.html","webpack:///src/dashboard/menus/menu/menu.component.ts","webpack:///src/dashboard/menus/menu/menu.component.html","webpack:///src/dashboard/panel/panel/panel.component.ts","webpack:///src/dashboard/panel/panel/panel.component.html","webpack:///src/dashboard/services/configuration.service.ts","webpack:///src/dashboard/services/menu.service.ts","webpack:///src/dashboard/status-bar/status-bar.component.ts","webpack:///src/dashboard/status-bar/status-bar.component.html","webpack:///src/dashboard/title-bar/title-bar.component.ts","webpack:///src/dashboard/title-bar/title-bar.component.html","webpack:///src/dashboard/top-bar/top-bar.component.ts","webpack:///src/dashboard/top-bar/top-bar.component.html","webpack:///src/dashboard/users/sign-in/sign-in.component.ts","webpack:///src/dashboard/users/sign-in/sign-in.component.html","webpack:///src/dashboard/users/users-api.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","fb","mynews","newsForm","News","data","formDirective","respons","PostNews","value","alert","resetForm","reset","onSubmit","selector","templateUrl","styleUrls","routes","path","component","canActivate","children","canActivateChild","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","configurationService","menuService","config","showlanguageSelector","showUserControls","showstatusBarBreakpoint","configure","items","MyMenuItems","text","icon","route","submenu","AppModule","provide","useExisting","declarations","providers","bootstrap","schemas","AuthenticatedUserComponent","LatestnewsComponent","newsService","news","getNews","PrecautionsComponent","AuthGuardService","usersService","router","console","log","isAuthenticated","navigate","providedIn","DashboardDataService","httpClient","REST_API_SERVER","District_Response","get","NewsService","latestnews","JSON","parse","localStorage","getItem","item","push","setItem","stringify","error","UsersService","loggedInStatus","username","password","TrackerComponent","dashboarddataservice","responsereport","finalresponse","totaldataonly","districtreport","districtresponse","districtData","stateList","termSub","EMPTY","sendGetRequest","subscribe","Object","values","slice","getDistrictRequest","statename","district","statecode","districtname","districtdata","name","currentState","getStateFromCode","paramMap","params","find","state","unsubscribe","ContentComponent","DashboardModule","DashboardComponent","MenuItemComponent","MenuComponent","PanelComponent","ConfigurationService","showStatusBar","settings","assign","MenuService","StatusBarComponent","TitleBarComponent","TopBarComponent","configurationServices","userApi","signOut","access","SignInComponent","UserApi","submitting","signInForm","valid","signIn","formError","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit , EventEmitter, Output} from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, FormGroupDirective } from '@angular/forms';\nimport { stringify } from 'querystring';\nimport { NewsService } from '../services/newsservice';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\nnewsForm= new FormGroup({\n  News: new FormControl(),\n});\n\n  constructor(private fb: FormBuilder, private mynews: NewsService) { }\n  onSubmit(data, formDirective: FormGroupDirective){\n    const respons = this.mynews.PostNews(this.newsForm.value);\n    if(respons){\n      alert(\"Successfully posted News\")\n      formDirective.resetForm();\n      this.newsForm = new FormGroup({\n        News: new FormControl(),  \n      });\n      this.newsForm.reset();\n    }\n    else{\n      alert(\"Error Posting News\")\n    }\n\n  }\n  \n  ngOnInit(): void {\n  \n}\n}","<div class=\"page-title\">POST NEWS</div>\r\n<form\r\n  class=\"example-form\"\r\n  [formGroup]=\"newsForm\"\r\n  #formDirective=\"ngForm\"\r\n  (ngSubmit)=\"onSubmit(newsForm, formDirective)\">\r\n<input type=\"text\" id=\"News\" formControlName=\"News\" class=\"form-control\" placeholder=\"Enter news here\">\r\n<button class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n  </form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrackerComponent } from './tracker/tracker.component';\nimport { LatestnewsComponent } from './latestnews/latestnews.component';\nimport { PrecautionsComponent } from './precautions/precautions.component';\nimport { AuthenticatedUserComponent } from './authenticated-user/authenticated-user.component';\nimport { SignInComponent } from 'src/dashboard/users/sign-in/sign-in.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { AuthGuardService } from './services/auth-guard.service';\n\n\n\nconst routes: Routes = [\n  \n\n{path: 'signin', component: SignInComponent},\n  {path: 'authenticated', component: AuthenticatedUserComponent,canActivate:[AuthGuardService],\n  children: [\n    {path: '',  canActivateChild: [AuthGuardService],\n  \n  children:[{path: '', redirectTo:'admin', pathMatch: 'full'},\n    {path: 'admin', component:AdminComponent},]}\n  ]},\n  {path: 'dashboard', component: TrackerComponent},\n  {path: 'dashboard/:statecode', component:TrackerComponent},\n  {path: 'latestnews', component: LatestnewsComponent},\n  {path: 'precautions', component: PrecautionsComponent},\n  {path: '', component: TrackerComponent},\n  {path: '**', component: TrackerComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ConfigurationService ,ConfigurationServiceSettings} from 'src/dashboard/services/configuration.service';\nimport { MenuService } from 'src/dashboard/services/menu.service';\nimport { MyMenuItems } from './app.menu';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public configurationService:ConfigurationService, public menuService: MenuService){\n\n    let config :ConfigurationServiceSettings ={\n    showlanguageSelector: true,\n    showUserControls :true,\n    showstatusBarBreakpoint :800\n    };\n\n    configurationService.configure(config);\n\n    menuService.items= MyMenuItems;\n\n\n  }\n  \n}\n","<corona-dashboard></corona-dashboard>","import { MenuItem } from '../dashboard/services/menu.service';\r\n\r\nexport let MyMenuItems: Array<MenuItem> = [\r\n    {\r\n        text:'Dashboard',\r\n        icon: 'fa-tachometer',\r\n        route: '/dashboard',\r\n        submenu: null\r\n    },\r\n    {\r\n        text:'Latest news',\r\n        icon: 'fa-newspaper-o',\r\n        route: '/latestnews',\r\n        submenu: null\r\n    },\r\n    {\r\n        text:'Precautions',\r\n        icon: 'fa-times-rectangle',\r\n        route: '/precautions',\r\n        submenu: null\r\n    },\r\n\r\n    // {\r\n    //     text:'Admin Panel',\r\n    //     icon: 'fa-user',\r\n    //     route: '/authenticated/admin',\r\n    //     submenu: null\r\n    // }\r\n];\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule ,NO_ERRORS_SCHEMA} from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardModule } from 'src/dashboard/dashboard.module';\nimport { TrackerComponent } from './tracker/tracker.component';\nimport { LatestnewsComponent } from './latestnews/latestnews.component';\nimport { PrecautionsComponent } from './precautions/precautions.component';\nimport { AuthenticatedUserComponent } from './authenticated-user/authenticated-user.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { UsersService } from './services/users.service';\nimport { UserApi } from 'src/dashboard/users/users-api';\nimport { AuthGuardService } from './services/auth-guard.service';\n\nimport {  HttpClientModule} from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TrackerComponent,\n    LatestnewsComponent,\n    PrecautionsComponent,\n    AuthenticatedUserComponent,\n    AdminComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, \n    DashboardModule,\n    HttpClientModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [UsersService,\n  {provide:UserApi, useExisting: UsersService},\n    AuthGuardService],\n  bootstrap: [AppComponent],\n  schemas:[NO_ERRORS_SCHEMA]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authenticated-user',\n  templateUrl: './authenticated-user.component.html',\n  styleUrls: ['./authenticated-user.component.css']\n})\nexport class AuthenticatedUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\r\n<app-admin></app-admin>","import { Component, OnInit, Input } from '@angular/core';\nimport { NewsService } from '../services/newsservice';\nimport { News } from '../services/news';\n\n@Component({\n  selector: 'app-latestnews',\n  templateUrl: './latestnews.component.html',\n  styleUrls: ['./latestnews.component.css']\n})\nexport class LatestnewsComponent  {\n\n\nnews: News[] = [];\n\n  constructor(private newsService: NewsService) {\n    this.news = this.newsService.getNews();\n   }\n\n  \n \n}\n","<div class=\"page-title\">\r\n    Latest News\r\n  </div>\r\n  <div class=\"acc\" *ngFor=\"let new of news\">\r\n        <div class=\"nh\">\r\n          <div class=\"head\" style=\"color:black; font-weight: bold;\">News</div>\r\n          <div class=\"content\">\r\n            {{ new.News }}\r\n          </div>\r\n        </div>\r\n        \r\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-precautions',\n  templateUrl: './precautions.component.html',\n  styleUrls: ['./precautions.component.css']\n})\nexport class PrecautionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"do\">Do's</h2>\n<p> Regularly and thoroughly clean your hands with an alcohol-based hand rub or wash them with soap and water.</p>\n<p> Maintain at least 1 metre (3 feet) distance between yourself and anyone who is coughing or sneezing.</p>\n<p> Avoid touching eyes, nose and mouth</p>\n<p> Make sure you, and the people around you, follow good respiratory hygiene</p>\n<p> If you have fever, cough and difficulty breathing, seek medical care early</p>\n<p> Stay informed and follow advice given by your healthcare provider</p>\n<br>\n\n<h2 class=\"dont\">Don'ts</h2>\n\n\n<p>Do not cough or sneeze into your bare hands or without covering your face.</p>\n<p>Don’t go near your contacts if you are suffering from fever and cough.</p>\n<p>Don’t touch your eyes, face, nose and tongue.</p>\n<p>Don’t go near affected/ sick people .</p>\n<p>Don’t self-medicate.</p>\n<p>Don’t shake hands or hug your friends and near ones.</p>\n<p>Do not go to hospital for routine checkup or follow up. As far as possible make tele-consultation with your healthcare provider.</p>\n<p>Don’t go to crowded places like parks, markets and religious places.</p>\n<p>Don’t go out unless it is absolutely essential.</p>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private usersService: UsersService, private router: Router) { }\n\n  canActivate() : boolean {\n    console.log('AuthGuard#canActivate called' + this.usersService.isAuthenticated);\n    if(!this.usersService.isAuthenticated){\n      console.log('You are not authorized');\n      this.router.navigate(['/signin']);\n\n    }\nreturn this.usersService.isAuthenticated;\n  }\n  canActivateChild() : boolean{\n    return this.canActivate();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardDataService {\n  private REST_API_SERVER = \"https://api.covid19india.org/data.json\";\n  private District_Response =\"https://api.covid19india.org/state_district_wise.json\";\n  state: string;\n  statecode: any;\n  districts: any[];\n\n  constructor(private httpClient: HttpClient) { }\n\n  public sendGetRequest(){\n    return this.httpClient.get(this.REST_API_SERVER);\n  }\n\n  public getDistrictRequest(){\n    return this.httpClient.get<any>(this.District_Response);\n  }\n\n\n\n \n}\n","import { Injectable } from '@angular/core';\r\nimport { News } from './news';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NewsService {\r\n  latestnews: News[] = [\r\n    {\r\n     \r\n      News: ' According to MHA guidelines, there will be  considerable relaxations in the districts falling in the Green and Orange Zones. The biggest and most economically-important cities including Delhi, Mumbai, Bengaluru, Chennai and Ahmedabad, all marked red zones, will stay under strict lockdown. Meanwhile, the total number of coronavirus cases in India has risen to 37,776, with 1,223 people dead.',\r\n      \r\n    },\r\n    {\r\n    \r\n    \r\n      News: `Globally, 3,402,160 people have been infected by coronavirus so far, and the total number of deaths from the disease stands at 239,623. Nations hit with most coronavirus cases at present are the US (1,131,030 ) Spain (242,988), Italy (207,428), UK (177,454), France (167,346) and Germany (164,077 ).`,\r\n      \r\n    },\r\n  ];\r\n  public getNews(): News[] {\r\n \r\n    return JSON.parse(localStorage.getItem('mynews'));\r\n  }\r\n  public PostNews(item: News): boolean {\r\n\r\n    try {\r\n      const news = this.getNews();\r\n      news.push(item);\r\n      localStorage.setItem('mynews', JSON.stringify(news));\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport {  UserApi } from 'src/dashboard/users/users-api';\nimport { Observable, of } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService implements UserApi {\n\n\n  private loggedInStatus= JSON.parse(localStorage.getItem('loggedIn') ||'false');\n  isAuthenticated=false;\n\n  constructor(private router: Router) {}\n  setLoggedIn(value: Boolean){\n    this.loggedInStatus = value;\n    localStorage.setItem('loggedIn', 'true')\n  \n  }\n   \n  signIn(username: \"username\", password: \"password\") : Observable<any>{\n    console.log('UsersService.signIn: ' + username + ' ' + password );\n    this.isAuthenticated=true;\n    return of({});;\n  }\n  signOut(): Observable<any>{\n    localStorage.setItem(\"loggedAsAdmin\",\"\");\n    \n    this.isAuthenticated= false;\n    this.router.navigate(['/signin']);\n    return of({});\n\n    \n  }\n  access: boolean;\n\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardDataService } from '../services/dashboard-data.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { State } from '../model/State';\nimport { District } from '../model/District';\nimport { DistrictData } from '../model/DistrictData';\nimport { Subscription } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-tracker',\n  templateUrl: './tracker.component.html',\n  styleUrls: ['./tracker.component.css']\n})\nexport class TrackerComponent implements OnInit {\n  responsereport =[];\n  finalresponse =[];\n  totaldataonly=[];\n  districtreport =[];\n  districtresponse=[];\n  districtData =[];\n  stateList: State[] = [];\n  statecode: String;\n  currentState: State;\n  private termSub = Subscription.EMPTY;\n  \n\n  constructor(public dashboarddataservice: DashboardDataService, private router: ActivatedRoute) {\n  \n   }\n\n\n  ngOnInit(): void {\n    this.dashboarddataservice.sendGetRequest().subscribe(\n      data => {\n        this.responsereport = data as string [];\t \n      console.log(data);\n      \n    this.responsereport = Object.values(data);\n    console.log(this.responsereport);\n    this.finalresponse=this.responsereport[1].slice(1,38);\n    console.log(this.finalresponse);  \n   \n    this.totaldataonly=this.responsereport[1].slice(0,1);\n    console.log(this.totaldataonly);\n    \n\n   })  \n   this.dashboarddataservice.getDistrictRequest().subscribe((data) => {\n    for (var statename in data) {\n      let district: District[] = [];\n      var code = data[statename].statecode;\n      for (var districtname in data[statename].districtData) {\n        let districtdata = data[statename].districtData[districtname] as DistrictData;\n        district.push({ name: districtname, data: districtdata });\n        \n      }\n\n      this.stateList.push({ districtData: district, statecode: code });\n     \n    }\n\n    this.currentState = this.getStateFromCode(this.statecode);\n  })\n\n  this.termSub= this.router.paramMap.subscribe(params => {\n    this.statecode = params.get(\"statecode\");\n  })\n\n  this.currentState = this.getStateFromCode(this.statecode);\n\n}\n\ngetStateFromCode(statecode: String): State {\n  return this.stateList.find(state => state.statecode === statecode);\n}\n\n\n   ngOnDestroy() {\n     this.termSub.unsubscribe();\n   }\n  }\n\n  \n\n\n  \n  \n\n\n\t\t\n","\n    <corona-panel>\n        <table style=\"border:1px solid black;margin-left:auto;margin-right:auto;\">\n            <thead>\n                <tr>\n                    <th style=\"width: 50 px;\"></th>\n                    <th style=\"width: 50 px;\">Confirmed</th>\n                    <th style=\"width: 50 px;\">Active</th>\n                    <th style=\"width: 50 px;\">Recovered</th>\n                    <th style=\"width: 50 px;\">Deceased</th>\n                    \n                </tr>\n                </thead>\n            <tbody>\n                <tr *ngFor=\"let total of totaldataonly\">\n\n                    <td >{{total.state}}</td>\n                    <td style=\"color: #d14566;\">{{total.confirmed}}</td>\n                    <td style=\"color: darkslateblue;\">{{total.active}}</td>\n                    <td  style=\"color: darkgreen;\">{{total.recovered}}</td>\n                    <td>{{total.deaths}}</td>\n                </tr>\n            </tbody>\n            </table>\n<table style=\"border:1px solid black;margin-left:auto;margin-right:auto;\">\n<thead>\n<tr>\n    <th style=\"width: 35 px;\">State/UT</th>\n    <th style=\"width: 35 px;\">Confirmed</th>\n    <th style=\"width: 35 px;\">Active</th>\n    <th style=\"width: 35 px;\">Recovered</th>\n    <th style=\"width: 35 px;\">Deceased</th>\n    \n</tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let response of finalresponse\">\n        \n\n        <td>\n            <button class=\"btn btn-sm btn-primary\" style=\"font-size: medium;\"  [routerLink]=\"['/dashboard', response.statecode]\"  >{{response.state}}</button>\n            \n            \n        </td>\n      \n        <td style=\"color: #d14566;\">{{response.confirmed}}</td>\n        <td style=\"color: darkslateblue;\">{{response.active}}</td>\n        <td  style=\"color: darkgreen;\">{{response.recovered}}</td>\n        <td>{{response.deaths}}</td>\n        \n    </tr>\n</tbody>\n\n\n</table>\n\n<table style=\"border:1px solid black;margin-left:auto;margin-right:auto;\" >\n    <thead class=\"thead-light\" *ngIf=\"currentState\">\n        <tr>\n            <th style=\"width: 35 px;\">Districts</th>\n            <th style=\"width: 35 px;\">Total Cases</th>\n            <th style=\"width: 35 px;\">Active</th>\n            <th style=\"width: 35 px;\">Recovered</th>\n            <th style=\"width: 35 px;\">Deceased</th>\n        </tr>\n    </thead>\n    <tbody *ngIf=\"currentState\">\n        <tr *ngFor=\"let district of currentState.districtData\">\n            <th scope=\"row\">{{district.name}}</th>\n            <td>{{district.data.confirmed}}</td>\n            <td>{{district.data.active}}</td>\n            <td>{{district.data.recovered}}</td>\n            <td>{{district.data.deceased}}</td>\n        </tr>\n    </tbody>\n</table>\n\n</corona-panel>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'corona-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"body-style\">\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ContentComponent } from './content/content.component';\nimport { TitleBarComponent } from './title-bar/title-bar.component';\nimport { StatusBarComponent } from './status-bar/status-bar.component';\nimport { MenuService } from './services/menu.service';\nimport { ConfigurationService } from './services/configuration.service';\nimport { MenuComponent } from './menus/menu/menu.component';\nimport { MenuItemComponent } from './menus/menu-item/menu-item.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { SignInComponent } from './users/sign-in/sign-in.component';\nimport { FormsModule} from '@angular/forms';\nimport { PanelComponent } from './panel/panel/panel.component';\n\n\n\n\n@NgModule({\n  declarations: [DashboardComponent, ContentComponent, TitleBarComponent, StatusBarComponent, MenuComponent, MenuItemComponent, TopBarComponent, SignInComponent, PanelComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule, \n    FormsModule\n  ],\n  providers:[\n    MenuService,\n    ConfigurationService,\n    \n  ],\n  exports: [\n    DashboardComponent,\n    TitleBarComponent,\n    StatusBarComponent,\n    ContentComponent,\n    MenuComponent,\n    MenuItemComponent, \n    TopBarComponent, \n    SignInComponent,\n    PanelComponent\n  ]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'corona-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--header-->\n<corona-title-bar></corona-title-bar>\n<corona-content></corona-content>\n\n<corona-status-bar></corona-status-bar>","import { Component, OnInit, Input } from '@angular/core';\nimport { MenuItem } from 'src/dashboard/services/menu.service';\n\n\n\n@Component({\n  selector: 'corona-menu-item',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.css']\n})\n\nexport class MenuItemComponent implements OnInit {\n  @Input() item: MenuItem;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"menu-item\"\n[routerLink]=\"item.route\" routerLinkActive=\"router-link-active\">\n    \n    <span class=\"fa {{item.icon}}\"></span>\n    <span>{{ item.text.toUpperCase() }}</span>  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { MenuService } from 'src/dashboard/services/menu.service';\n\n@Component({\n  selector: 'corona-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(public menuService: MenuService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n\n    <ul>\n<li *ngFor=\"let itemEl of menuService.items\">\n<corona-menu-item [item]=\"itemEl\"></corona-menu-item>\n\n</li>\n    </ul>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'corona-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.css']\n})\nexport class PanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-content></ng-content>","import { Injectable } from '@angular/core';\n\n\nexport interface ConfigurationServiceSettings{\n  showlanguageSelector?: boolean,\n  showUserControls?: boolean,\n  showstatusBarBreakpoint?: number,\n\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n\n\nshowUserControls= true;\nshowStatusBar=true;\nshowstatusBarBreakpoint = 0;\n\nconfigure(settings: ConfigurationServiceSettings) : void {\nObject.assign(this, settings);\n}\n\n\n  }\n\n","import { Injectable } from \"@angular/core\";\r\n\r\nexport interface MenuItem{\r\n\r\n\r\ntext: String,\r\nicon: String,\r\nroute: String,\r\nsubmenu: Array<MenuItem>\r\n}\r\n\r\n@Injectable()\r\nexport class MenuService{\r\n\r\n    items:Array<MenuItem>;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'corona-status-bar',\n  templateUrl: './status-bar.component.html',\n  styleUrls: ['./status-bar.component.css']\n})\nexport class StatusBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h5 style=\"color: black;\">Stay Home !!Stay Safe :)</h5>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'corona-title-bar',\n  templateUrl: './title-bar.component.html',\n  styleUrls: ['./title-bar.component.css']\n})\nexport class TitleBarComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"title-bar\">\n<img src=\"assets/logo.png\" alt=\"Covid-19 India Dashboard Logo\" [routerLink]=\"['/dashboard']\" >\n<div class=\"menu-area\">\n    <corona-top-bar></corona-top-bar>\n <corona-menu></corona-menu>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { ConfigurationService } from '../services/configuration.service';\nimport { UserApi } from '../users/users-api';\n\n@Component({\n  selector: 'corona-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\n\nexport class TopBarComponent implements OnInit {\n\n  constructor(public configurationServices: ConfigurationService, public userApi: UserApi) { }\n\n  ngOnInit(): void {\n  }\n\n  signOut() {\n    this.userApi.signOut();\n    this.userApi.access=false;\n    \n  }\n}\n","\n<div *ngIf=\"configurationServices.showUserControls\">\n    <span class=\"sign-out\" [routerLink]=\"['/signin']\" *ngIf=\"!userApi.access\">SIGN IN</span>\n    <span class=\"sign-out\" (click)=\"signOut()\" *ngIf=\"userApi.access==true\">SIGN OUT</span>\n \n    </div>","import { Component, OnInit } from '@angular/core';\nimport { UserApi } from '../users-api';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'corona-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  \n  \n  formError: String;\n  submitting=false;\n  constructor(private UserApi: UserApi, private router:Router) { \n \n  }\n  onSubmit(signInForm : NgForm){\n\n\n    \n    if(signInForm.valid){\n      console.log('submitting...', signInForm);\n      this.submitting =true;\n      this.UserApi.access=true;\n      \n    \n     \nthis.UserApi.signIn(signInForm.value.username, signInForm.value.password)\n.subscribe((data)=>{\n  console.log('is valid data', data);\n   if (signInForm.value.username == 'admin' && signInForm.value.password== \"admin\"){\n    this.router.navigate(['/authenticated/admin']);\n    this.UserApi.access=true;\n    \n   }\n  else{\n    this.submitting=false;\n    this.UserApi.access=false;\n    \n    alert(\"You are not authorized, Please login with admin credentials\")\n  }\n},\n(error)=>{\n  this.submitting=false;\n  this.UserApi.access=false;\n  console.log('Error occured', error);\n  this.formError =error;\n}\n);\n    \n  }\n  }\n  ngOnInit(): void {\n\n    \n  }\n  \n\n}\n","<div class=\"sign-in-form\">\n    <img src=\"../../../assets/logo.png\" />\n    <h4>Sign In</h4>\n    <form #signInForm=\"ngForm\" (ngSubmit)=\"onSubmit(signInForm)\">\n        <div class=\"form-group\">\n            <input class=\"form-control\" name=\"username\" required placeholder=\"User Name\" ngModel #username=\"ngModel\" />\n            <div [hidden]=\"username.valid || username.pristine\" class=\" alert alert-danger\">\n                User Name is necessary.\n            </div>\n        </div>\n        <div class=\"form-group\" >\n            <input class=\"form-control\" name=\"password\" required type=\"password\" placeholder=\"Password\" ngModel #password=\"ngModel\" />\n            <div [hidden]=\"password.valid || password.pristine\" class=\" alert alert-danger\">\n                Password is necessary.\n            </div>\n        </div>\n        <div *ngIf=\"formError\" class=\"alert alert-danger\">\n            {{formError}}\n        </div>\n        <div *ngIf=\"!submitting\">\n           <button type=\"submit\" class=\"btn btn-primary\">Sign In</button>\n        </div>\n        <div *ngIf=\"submitting\">\n            <p class=\"message\">Signing In....</p>\n        </div>\n    </form>\n</div>","import { Observable } from 'rxjs';\r\n\r\n\r\n\r\nexport abstract class UserApi{\r\n\r\nsignIn:(username: string, password: string) => Observable<any>;\r\nsignOut: ()=>Observable<any>;\r\naccess: boolean;\r\n        \r\n    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}